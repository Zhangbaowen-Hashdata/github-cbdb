name: Build and Release RPM

on:
  push:
    branches:
      - main
  schedule:
    - cron: '45 9 * * *'

jobs:
  Build-rpm:
    runs-on: label-5
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
      - name: Environmental construction
        run: |
          whoami
          sudo ln -sf /opt/rh/rh-git218/root/usr/bin/git /usr/bin/git
          pushd $GITHUB_WORKSPACE
          pushd readmes
          source README.CentOS.bash
          popd
          sudo yum -y install R apr apr-devel apr-util automake zip zlib \
                      autoconf bash bison bison-devel bzip2 bzip2-devel \
                      centos-release-scl curl flex flex-devel gcc gcc-c++ \
                      git gdb iproute krb5-devel less libcurl libcurl-devel \
                      libevent libevent-devel libxml2 libxml2-devel libyaml \
                      libzstd-devel libzstd make openldap openssh  vim wget \
                      openssh-server openssl openssl-devel openssl-libs perl \
                      python3-devel readline readline-devel rsync sed sudo tar \
                      which xerces-c-devel openssh-clients \

          sudo yum -y install epel-release centos-release-scl evtoolset-10-gcc \
                      devtoolset-10-gcc-c++ devtoolset-10-binutils




          scl enable devtoolset-10 bash
          source /opt/rh/devtoolset-10/enable
          sudo gcc -v
          sudo chmod 777 /etc/bashrc
          sudo echo "source /opt/rh/devtoolset-10/enable" >> /etc/bashrc
          source /etc/bashrc
          sudo chmod 644 /etc/bashrc
          sudo ln -sf /usr/bin/cmake3 /usr/local/bin/cmake
          # sudo chmod 777 /etc/ld.so.conf
          echo -e "/usr/local/lib \n/usr/local/lib64 \n/usr/lib \n/usr/lib64" >> /etc/ld.so.conf
          sudo ldconfig
          echo "Environment setup completed ！！！"
      - name: get new tag
        id: set_value
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          whoami
          git tag -d $(git tag)
          git fetch --tags
          echo "The workspace is $GITHUB_WORKSPACE"
          timestamp=$(date +"%Y%m%d")
          rm -rf /tmp/release && mkdir /tmp/release
          old_tag=$(git tag | sort -V -r | head -n 1)
          main_version=$(echo $old_tag | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
          new_tag="$main_version-$timestamp-nightly"

          echo "The old tag that already exists is $old_tag"
          echo "The main version is $main_version"
          echo "The new tag is $new_tag"
          echo "::set-output name=NEW_TAG::${new_tag}"
          echo "::set-output name=MAIN_VERSION::${main_version}"
          sudo git tag $new_tag
          git tag

      - name: build_rpm
        run: |
          ./configure --with-perl --with-python --with-libxml --with-gssapi --prefix=/home/gpadmin/cbdb-install
          make -j16 && make install
          pwd && ruby -v
          fpm --version
          echo "build rpm package"
          mkdir -p tmp/usr/local/cloudberrydb
          cp -a /home/gpadmin/cbdb-install/* tmp/usr/local/cloudberrydb
          fpm -s dir -t rpm -n cloudberrydb -v ${{ steps.set_value.outputs.MAIN_VERSION }} -p ./ -C tmp
          cp cloudberrydb-${{ steps.set_value.outputs.MAIN_VERSION }}-1.x86_64.rpm /tmp/release
      - name: DEBUG
        run: |
          echo "${{ steps.set_value.outputs.NEW_TAG }}"
          echo "${{ steps.set_value.outputs.MAIN_VERSION }}"
      - name: release
        uses: softprops/action-gh-release@v1
        with:
          files: "/tmp/release/*.rpm"
          name: v${{ steps.set_value.outputs.NEW_TAG }}
          tag_name: "${{ steps.set_value.outputs.NEW_TAG }}"
          # body_path: RELEASE_NOTES.md
          prerelease: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_NIGHTLY }}
